const fs = require("fs");
const path = require("path");

const dbPath = path.join(__dirname, "../../db/db.json");
const db = require(dbPath);

const imagesPath = path.join(__dirname, "../../db/images/images.json");
const imagesData = require(imagesPath);

async function giveRandomCardToUser(bot, msg) {
  try {
    if (!Array.isArray(imagesData)) {
      console.error("–û—à–∏–±–∫–∞: imagesData –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º.");
      return bot.sendMessage(
        msg.chat.id,
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫–∞—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
      );
    }

    const userIndex = db.findIndex((user) => user.username === msg.from.username);

    if (userIndex === -1) {
      console.error("–û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
      return bot.sendMessage(
        msg.chat.id,
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫–∞—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
      );
    }

    if (!db[userIndex].hasOwnProperty("inventory")) {
      db[userIndex].inventory = [];
    }

    const lastUseTime = db[userIndex].lastCardUseTime || 0;
    const currentTime = Date.now();
    const timeDiff = currentTime - lastUseTime;
    const cooldownTime = 2 * 60 * 60 * 1000; // 2 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    if (timeDiff < cooldownTime) {
      const remainingTime = cooldownTime - timeDiff;
      const remainingHours = Math.floor(remainingTime / (60 * 60 * 1000));
      const remainingMinutes = Math.floor((remainingTime % (60 * 60 * 1000)) / (60 * 1000));

      console.error("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–∑-–∑–∞ —Ç–∞–π–º–µ—Ä–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è.");
      return bot.sendMessage(
        msg.chat.id,
        `–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${remainingHours} —á–∞—Å–æ–≤ –∏ ${remainingMinutes} –º–∏–Ω—É—Ç.`
      );
    }

    const randomIndex = Math.floor(Math.random() * imagesData.length);

    if (randomIndex < 0 || randomIndex >= imagesData.length) {
      console.error("–û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ imagesData.");
      return bot.sendMessage(
        msg.chat.id,
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫–∞—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
      );
    }

    const randomCard = imagesData[randomIndex];

    if (!randomCard || !randomCard.fileId || !randomCard.chatId || !randomCard.power || !randomCard.name) {
      console.error("–û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ imagesData.");
      return bot.sendMessage(
        msg.chat.id,
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫–∞—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
      );
    }

    randomCard.rarity = randomCard.rarity || "–ù–µ —É–∫–∞–∑–∞–Ω–æ";

    db[userIndex].inventory.push(randomCard);
    db[userIndex].lastCardUseTime = currentTime;

    fs.writeFileSync(dbPath, JSON.stringify(db, null, "\t"));

    await bot.sendPhoto(randomCard.chatId, randomCard.fileId, { 
      caption: `ü¶† ${randomCard.name}\n\nüí¨ ${msg.from.username}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É –≥–µ—Ä–æ—è ${randomCard.name}!\nüé≠ –ö–ª–∞—Å—Å: ${randomCard.class}\nüîÆ –†–µ–¥–∫–æ—Å—Ç—å: ${randomCard.rarity}\n–ê—Ç–∞–∫–∞: ${randomCard.power || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}\n‚ù§Ô∏è –ó–∞—â–∏—Ç–∞: ${randomCard.deffence}\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüÉè –ö–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–æ–∫–µ–Ω–æ–≤: ${db[userIndex].balance - randomCard.power}` 
    });
    
  } catch (error) {
    console.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫–∞—Ä—Ç—ã:", error.message);
    await bot.sendMessage(
      msg.chat.id,
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫–∞—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    );
  }
}

module.exports = {
  giveRandomCardToUser: giveRandomCardToUser,
}