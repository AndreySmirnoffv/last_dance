const fs = require("fs");

const cards = require("../db/images/images.json");

const users = require("../db/db.json");

const shopText = require('../db/shop/shop.json')

const shopMessage = (shopText.message|| "–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω–µ.").trim();

async function getPack(bot, msg, packCount) {
  try {
    console.log("—Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ —Å–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
    const userId = msg.from.id;
    const user = users.find((x) => x.username === msg.from.username);

    if (!user) {
      return await bot.sendMessage(userId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }

    const totalCost = cards.reduce((acc, card) => acc + card.power, 0) * packCount;

    if (user.balance == null || user.balance < 2500 || isNaN(user.balance)) {
      user.balance = 0;
      fs.writeFileSync("assets/db/db.json", JSON.stringify(users, null, '\t'));
    }else if (user.balance < totalCost) {
      user.balance = 0
      fs.writeFileSync("assets/db/db.json", JSON.stringify(users, null, '\t'))
      return bot.sendMessage(
        userId,
        `–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è ${packCount} –ø–∞–∫–æ–≤.`
      );
    }

    const openedCards = [];

    for (let i = 0; i < packCount; i++) {
      console.log("—Ü–∏–∫–ª –Ω–∞—á–∞–ª —Å–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
      const randomCard = cards[Math.floor(Math.random() * cards.length)];
      const existingCard = user.inventory.find(
        (card) => card.cardName === randomCard.cardName
      );
        console.log("—Ñ–∏–ª—å—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
      if (randomCard.cardName === existingCard.cardName) {
        user.balance += randomCard.cardPower / 2;
        fs.writeFileSync('assets/db/db.json', JSON.stringify(users, null, '\t'))
        await bot.sendMessage(userId, `–í–∞–º –≤—ã–ø–∞–ª–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${user.balance}`)
      } else {
        user.inventory.push(randomCard);
        openedCards.push(randomCard);
        user.balance += 0.5 * randomCard.cardPower;
        fs.writeFileSync("assets/db/db.json", JSON.stringify(users, null, "\t"));

        const photoMessage = `${shopMessage} –í—ã –æ—Ç–∫—Ä—ã–ª–∏ ${packCount} –ø–∞–∫–æ–≤ –∏ –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—ã:\nü¶† ${randomCard.cardName}\nüí¨ ${randomCard.cardDeffence}\nüé≠ ${randomCard.cardPower}\nüîÆ${randomCard.cardRarity}\n${randomCard.cardSection}\n‚ù§Ô∏è ${openedCards.power}.\n –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${user.balance}.`
        await bot.sendPhoto(userId, randomCard.cardPhoto, {caption: photoMessage} );
      }
    }

  } catch (error) {
    await bot.sendMessage(msg.message.from.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.");
    throw error;
  }
}

async function getUniquePack(bot, msg) {
  try {
    console.log("—Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ —Å–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
    const userId = msg.message.chat.id;

    const user = users.find(user => user.username === msg.from.username);
    const zeroDropChanceCards = cards.find((card) => card.cardName);
    const existingCard = user.inventory.find(card => card.cardName === zeroDropChanceCards.cardName)
    console.log(zeroDropChanceCards)

    const openedCards = [];

    let updatedBalance = 2500
    console.log("–≤–∞–ª–∏–¥–∞—Ü–∏—è —é–∑–µ—Ä–∞")
    if (!user) {
      return await bot.sendMessage(userId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }else if (user.balance < updatedBalance || isNaN(updatedBalance)) {
      return await bot.sendMessage(userId, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–∞–∫–∞.");
    }
    console.log('–≤–∞–ª–∏–¥–∞—Ü–∏—è —é–∑–µ—Ä–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')

    if (!existingCard) {
      console.log("–ø—ã—Ç–∞—é—Å—å –≤—ã–¥–∞—Ç—å –∫–∞—Ä—Ç—É")
      openedCards.push(zeroDropChanceCards)
      user.inventory.push(zeroDropChanceCards);
      console.log(zeroDropChanceCards)
      fs.writeFileSync("assets/db/db.json", JSON.stringify(users, null, "\t"));
      const photoMessage = `${shopMessage} –í—ã –æ—Ç–∫—Ä—ã–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–∞–∫ –∏ –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—ã:\nü¶† ${openedCards.cardName}\nüí¨ ${openedCards.cardDeffence}\nüé≠ ${openedCards.cardPower}\nüîÆ${openedCards.cardRarity}\n${openedCards.cardSection}\n‚ù§Ô∏è ${openedCards.power}.\n –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${user.balance}.`
      await bot.sendPhoto(userId, zeroDropChanceCards?.cardPhoto, {caption: photoMessage} );
      console.log("–∫–∞—Ä—Ç –≤—ã–¥–∞–Ω–∞")
    }else{
      console.log("–ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –∫–∞—Ä—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ —É —é–∑–µ—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å")
      user.inventory.push(zeroDropChanceCards);
      fs.writeFileSync("assets/db/db.json", JSON.stringify(users, null, '\t'))
      await bot.sendMessage(userId, "–í–∞–º –≤—ã–ø–∞–ª–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + user.balance)
      console.log("–ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –∫–∞—Ä—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ —É —é–∑–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–∞")

    }
  } catch (error) {
    bot.sendMessage(msg.message.chat.id,"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.");
    throw error;
  }
}

module.exports = {
  getPack: getPack,
  getUniquePack: getUniquePack,
};
